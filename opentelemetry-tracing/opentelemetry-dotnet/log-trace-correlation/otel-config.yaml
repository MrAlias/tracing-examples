extensions:
  health_check:
  zpages:
    endpoint: :55679

receivers:
  otlp:
    protocols:
      grpc:
      http:    

processors:
  batch:

exporters:
  logging/debug:
    verbosity: detailed
  logging:
    verbosity: normal
  # Traces
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/6d0088440deab8be7ff8d7204e73c8a1e36cbbdb/exporter/sapmexporter#configuration
  sapm:
    access_token: "${SPLUNK_ACCESS_TOKEN}"
    endpoint: "https://ingest.${SPLUNK_REALM}.signalfx.com/v2/trace"
  # Metrics
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/6d0088440deab8be7ff8d7204e73c8a1e36cbbdb/exporter/signalfxexporter#metrics-configuration
  signalfx:
    access_token: "${SPLUNK_ACCESS_TOKEN}"
    realm: "${SPLUNK_REALM}"
  # Logs
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/6d0088440deab8be7ff8d7204e73c8a1e36cbbdb/exporter/splunkhecexporter#configuration
  splunk_hec:
    token: "${SPLUNK_HEC_TOKEN}"
    endpoint: "${SPLUNK_HEC_URL}"
# alternatively, logs can be sent directly to splunk o11y cloud
    # token: "${SPLUNK_ACCESS_TOKEN}"
    # endpoint: "https://ingest.${SPLUNK_REALM}.signalfx.com/v1/log"

service:
  pipelines:
    traces:
      receivers:
        - otlp
      processors:
        - batch
      exporters:
        - logging
        - sapm
    metrics:
      receivers:
        - otlp
      processors:
        - batch
      exporters:
        - logging
        - signalfx
    logs:
      receivers:
        - otlp
      processors:
        - batch
      exporters:
        - logging
        - splunk_hec

  extensions:
    - health_check
    - zpages
